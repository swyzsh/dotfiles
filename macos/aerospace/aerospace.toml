# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = [
  'exec-and-forget sketchybar',
  'exec-and-forget borders active_color=0xFF7f849c inactive_color=0xFF494d64 width=4.0 style=round ax_focus=off hidpi=off'
]

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget sketchybar',
  'exec-and-forget borders active_color=0xFF7f849c inactive_color=0xFF494d64 width=4.0 style=round ax_focus=off hidpi=off'
]

exec-on-workspace-change = ['/bin/bash','-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# gray borders:
#  'exec-and-forget borders active_color=0xFF7f849c inactive_color=0xFF494d64 width=4.0 style=round ax_focus=off hidpi=off'
# lavender borders:
#  'exec-and-forget borders active_color=0xFFb4befe inactive_color=0xFF494d64 width=4.0 style=round ax_focus=off hidpi=off'
# blue borders:
#  'exec-and-forget borders active_color=0xFF89b4fa inactive_color=0xFF494d64 width=4.0 style=round ax_focus=off hidpi=off'

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = [
  'move-mouse --fail-if-noop window-lazy-center',
  'move-mouse monitor-lazy-center'
]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true 

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical =   8
outer.left =       8
outer.bottom =     8
outer.top =        8
outer.right =      8

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}

[workspace-to-monitor-force-assignment]
# use terminal command `aerospace list-monitors`
# 1 = LG ULTRAGEAR
# 2 = LG HDR 4K
1 = 2
2 = 2
3 = 2
4 = 2
5 = 2
6 = 1
7 = 1
8 = 1
9 = 1
10 = 1

[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 10'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = ['move-node-to-workspace 1']
alt-shift-2 = ['move-node-to-workspace 2']
alt-shift-3 = ['move-node-to-workspace 3']
alt-shift-4 = ['move-node-to-workspace 4']
alt-shift-5 = ['move-node-to-workspace 5']
alt-shift-6 = ['move-node-to-workspace 6']
alt-shift-7 = ['move-node-to-workspace 7']
alt-shift-8 = ['move-node-to-workspace 8']
alt-shift-9 = ['move-node-to-workspace 9']
alt-shift-0 = ['move-node-to-workspace 10']

# Move to workplace & move set workplace active
# alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
# alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
# alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
# alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
# alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
# alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
# alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
# alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# Open a new window with AppleScript
alt-enter = '''exec-and-forget osascript -e '
tell application "Alacritty.app"
    do script
    activate
end tell'
'''

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']
alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# Floating Layout for specified applications
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.TextEdit'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.airportutility'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Terminal'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Automator'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.audio.AudioMIDISetup'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.calculator'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.clock'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Chess'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.clock'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.ColorSyncUtility'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Console'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finmy'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.AddressBook'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Dictionary'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.DiskUtility'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.freeform'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.grapher'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Home'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.keychainaccess'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Music'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.PhotoBooth'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Photos'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.podcasts'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.shortcuts'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.stocks'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.TV'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.backup.launcher'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Transmission'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.VoiceMemos'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.VoiceOverUtility'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.backup.weather'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.iMovieApp'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.adobe.Photoshop'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.adobe.illustrator'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.spotify.client'
if.during-aerospace-startup = false
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
if.during-aerospace-startup = false
run = ['layout floating']
